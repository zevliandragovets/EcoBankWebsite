generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // atau "mysql", "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  email       String   @unique
  password    String   // Added this missing field
  name        String
  phone       String?
  address     String?
  role        Role     @default(USER)
  balance     Float    @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  transactions Transaction[]
  
  @@map("users")
}

model Category {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  wasteItems WasteItem[]
  
  @@map("categories")
}

model WasteItem {
  id          String   @id @default(cuid())
  name        String   @unique
  price       Float
  unit        String
  categoryId  String
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  category         Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  transactionItems TransactionItem[]
  
  @@map("waste_items")
}

model Transaction {
  id          String            @id @default(cuid())
  userId      String
  totalAmount Float
  totalWeight Float
  status      TransactionStatus @default(PENDING)
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  
  user  User                @relation(fields: [userId], references: [id], onDelete: Cascade)
  items TransactionItem[]
  
  @@map("transactions")
}

model TransactionItem {
  id            String @id @default(cuid())
  transactionId String
  wasteItemId   String
  weight        Float
  price         Float
  subtotal      Float
  
  transaction Transaction @relation(fields: [transactionId], references: [id], onDelete: Cascade)
  wasteItem   WasteItem   @relation(fields: [wasteItemId], references: [id], onDelete: Cascade)
  
  @@map("transaction_items")
}

enum Role {
  USER
  ADMIN
}

enum TransactionStatus {
  PENDING
  APPROVED
  COMPLETED
  REJECTED
}